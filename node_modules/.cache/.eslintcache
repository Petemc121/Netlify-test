[{"/home/peter/Documents/React/bjj-notes/src/index.js":"1","/home/peter/Documents/React/bjj-notes/src/App.js":"2","/home/peter/Documents/React/bjj-notes/src/Notes.js":"3","/home/peter/Documents/React/bjj-notes/src/Note.js":"4","/home/peter/Documents/React/bjj-notes/src/Categories.js":"5","/home/peter/Documents/React/bjj-notes/src/Category.js":"6","/home/peter/Documents/React/bjj-notes/src/Techniques.js":"7","/home/peter/Documents/React/bjj-notes/src/Technique.js":"8","/home/peter/Documents/React/bjj-notes/src/CategorizedTechniques.js":"9","/home/peter/Documents/React/bjj-notes/src/CategorizedTechnique.js":"10","/home/peter/Documents/React/bjj-notes/src/CatTechNotes.js":"11","/home/peter/Documents/React/bjj-notes/src/CatTechNote.js":"12","/home/peter/Documents/React/bjj-notes/src/CategoryKeys.js":"13","/home/peter/Documents/React/bjj-notes/src/CategoryKey.js":"14"},{"size":516,"mtime":1627137749366,"results":"15","hashOfConfig":"16"},{"size":16711,"mtime":1627011134817,"results":"17","hashOfConfig":"16"},{"size":456,"mtime":1627011134817,"results":"18","hashOfConfig":"16"},{"size":1499,"mtime":1627011134817,"results":"19","hashOfConfig":"16"},{"size":795,"mtime":1627011201434,"results":"20","hashOfConfig":"16"},{"size":1497,"mtime":1627011134817,"results":"21","hashOfConfig":"16"},{"size":582,"mtime":1627011134817,"results":"22","hashOfConfig":"16"},{"size":2875,"mtime":1627138136340,"results":"23","hashOfConfig":"16"},{"size":756,"mtime":1627011134817,"results":"24","hashOfConfig":"16"},{"size":3574,"mtime":1627011202994,"results":"25","hashOfConfig":"16"},{"size":559,"mtime":1627011134817,"results":"26","hashOfConfig":"16"},{"size":1796,"mtime":1627011134817,"results":"27","hashOfConfig":"16"},{"size":384,"mtime":1627011134817,"results":"28","hashOfConfig":"16"},{"size":971,"mtime":1627011134817,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"1m9v5cs",{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/peter/Documents/React/bjj-notes/src/index.js",["63"],"import React from 'react';\nimport App from './App.js';\nimport ReactDOM from 'react-dom';\nimport {scrollBehaviourDragImageTranslateOverride} from \"mobile-drag-drop/scroll-behaviour\";\nimport {polyfill} from \"mobile-drag-drop\";\nimport app from './app.css';\n\npolyfill({\n  // use this to make use of the scroll behaviour\n  dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride\n});\n\nReactDOM.render(\n\n\n  <React.StrictMode>\n   \n    <App  />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","/home/peter/Documents/React/bjj-notes/src/App.js",["64","65","66","67","68","69"],"import React, {useEffect, useState, useRef } from 'react';\nimport Techniques from './Techniques';\nimport Categories from './Categories';\nimport CategoryKeys from './CategoryKeys';\n\nconst LOCAL_STORAGE_KEY_1 = 'BJJNotesApp.techniques'\nconst LOCAL_STORAGE_KEY_2 = 'BJJNotesApp.categories'\nconst LOCAL_STORAGE_KEY_3 = 'BJJNotesApp.categoryKeys'\n\nexport default function App() {\n   const [techniques, setTechniques] = useState([]);\n   const [categories, setCategories] = useState([]);\n   const [categoryKeys, setCategoryKeys] = useState([]);\n   const categoryRef = useRef();\n   const techniqueRef = useRef();\n   let techniqueNo = Math.floor(Math.random()*100000);\n   let catNo = Math.floor(Math.random()*100000);\n\n\nuseEffect(() => {\n    const storedTechniques = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1))\n    if (storedTechniques) setTechniques(storedTechniques)\n}, [])\n\nuseEffect(() => {\n    const storedCategories = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2))\n    if (storedCategories) setCategories(storedCategories)\n}, [])\n\nuseEffect(() => {\n    const storedCategoryKeys = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_3))\n    if (storedCategoryKeys) setCategoryKeys(storedCategoryKeys)\n}, [])\n\nuseEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(techniques))\n}, [techniques])\n\nuseEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_2, JSON.stringify(categories))\n}, [categories])\n\nuseEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(categoryKeys))\n}, [categoryKeys])\n\n\n   \n   function createLog() {\n       const technique = techniqueRef.current.value;\n\n       if(technique === \"\")\n       { alert(\"Please enter a technique.\") \n       return;\n        }\n        \n       setTechniques(prevTechniques => {\n      \n           return [...prevTechniques, {id: techniqueNo, technique:technique, video:'', color:'rgb(21, 134, 152)', notes:[]}];\n\n       });\n\n  \n       techniqueRef.current.value = null;\n    }\n\n    function editVideo(videoLink, techniqueID) {\n       let embedVideoLink = videoLink.replace('watch?v=','embed/')\n\n       if (embedVideoLink.includes('&t='))\n       {\n           const tIndex = embedVideoLink.indexOf('&t=')\n           embedVideoLink = embedVideoLink.substring(0,tIndex);\n           console.log(embedVideoLink)\n       }\n\n       setTechniques(techniques => {\n        const updatedTechniques =  techniques.map(technique =>\n            {\n                if (technique.id === techniqueID)\n                {\n                   return {id: technique.id, technique:technique.technique, video:embedVideoLink, color:technique.color, notes:technique.notes}     \n                }\n                else{\n                    return {id: technique.id, technique:technique.technique, video:technique.video, color:technique.color, notes:technique.notes}  \n                }\n            })\n\n            return updatedTechniques;\n       })\n    }\n\n    function editCatTechVideo(videoLink, techniqueID) {\n        let embedVideoLink = videoLink.replace('watch?v=','embed/')\n \n        if (embedVideoLink.includes('&t='))\n        {\n            const tIndex = embedVideoLink.indexOf('&t=')\n            embedVideoLink = embedVideoLink.substring(0,tIndex);\n            console.log(embedVideoLink)\n        }\n \n        setCategories(categories => {\n\n      return  categories.map(category => \n                {\n        const updatedCatTechniques = category.catTechniques.map(catTechnique => {\n                 if (catTechnique.id === techniqueID)\n                 {\n                    return {id: catTechnique.id, technique:catTechnique.technique, video:embedVideoLink, color:catTechnique.color, notes:catTechnique.notes}     \n                 }\n                 else \n                 {\n                     return {id: catTechnique.id, technique:catTechnique.technique, video:catTechnique.video, color:catTechnique.color, notes:catTechnique.notes}  \n                 }\n             })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n        })\n\n     })\n    }\n\n   \n\n    function addNote(notes, chosenTechnique) {\n        setTechniques(techniques => {\n          let  updatedTechniques = [];\n            techniques.forEach(technique => {\n                if (technique.id == chosenTechnique.id)\n                {\n                let updatedTechnique = {id: chosenTechnique.id, technique: chosenTechnique.technique, video:chosenTechnique.video, color: chosenTechnique.color, notes: notes}\n\n                updatedTechniques.push(updatedTechnique)\n                } else{\n                    \n                    updatedTechniques.push(technique)\n                }\n            \n             console.log(updatedTechniques)\n            })\n            \n            return updatedTechniques;\n        });\n        \n    }\n\n    function editNote(noteEdit, noteID, chosenTechnique) {\n        setTechniques(techniques => {\n            let updatedTechniques = [];\n            \n            techniques.forEach(technique => {\n                let updatedTechniqueNotes = [];\n                if (technique.id === chosenTechnique.id)\n                 {\n\n                    technique.notes.forEach(techniqueNote => {\n                        if (techniqueNote.noteID === noteID)\n                        { \n                            updatedTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                        } else\n                        {\n\n                            updatedTechniqueNotes.push({noteText:techniqueNote.noteText, noteID:techniqueNote.noteID, noteTitle:\"Note \" + (techniqueNote.noteID)})\n                        }\n                    })\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, video:technique.video, color: technique.color, notes: updatedTechniqueNotes})\n\n\n                  } else\n                  {\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, video:technique.video, color: technique.color, notes:technique.notes})\n                  }\n\n\n                })\n\n                return updatedTechniques;\n            })\n\n        }\n\n\n    \n\n    function handleCreateCategory()\n    {\n\n        // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\n        const colorArray = [\"#F94144\",\"#F3722C\",\"#F8961E\",\"#F9C74F\", \"#90BE6D\", \"#43AA8B\", \"#577590\", \"#541388\"]\n        const category = categoryRef.current.value;\n\n        if(category === \"\")\n        { alert(\"Please enter a category.\") \n        return;\n         }\n\n         if(categories.length > 7)\n         {\n             alert(\"You've reached your category limit!\")\n             return\n         }\n\n         setCategories(prevCategories => {\n             return [...prevCategories, {id:catNo, category:category, color:colorArray[categories.length], catTechniques:[] }]\n         })\n\n         setCategoryKeys(prevCategoryKeys => {\n            return [...prevCategoryKeys, {id:catNo, category:category, color:colorArray[categories.length], catKeyTechniques:[] }]\n         })\n\n         categoryRef.current.value = null;\n\n    }\n\n   \n\n    \n   const handleDeleteTechnique = (techniqueID) => {\n    setTechniques(techniques => {return techniques.filter(technique => technique.id !== techniqueID)}) \n}\n\nconst handleDeleteCategory = (categoryID) =>\n{\n    setCategories(categories => {return categories.filter(category => category.id !== categoryID)})\n    setCategoryKeys(categoryKeys => {return categoryKeys.filter(categoryKey => categoryKey.id !== categoryID)})\n}\n\n\n\n    function handleDeleteNote(noteID, techniqueID)\n    {\n        setTechniques(techniques => {\n           return techniques.map(technique =>\n                {\n                    \n                    if (technique.id === techniqueID)\n                    {\n                       const newNotes = technique.notes.filter(note => note.noteID != noteID);\n\n                       return {id: technique.id, technique: technique.technique, video:technique.video, color: technique.color, notes: newNotes}\n\n                    } else\n                    {\n                        return {id: technique.id, technique: technique.technique, video:technique.video, color: technique.color, notes: technique.notes}\n                    }\n\n                    \n                })\n        })\n    }\n\n    \n    const handleDeleteCatTechnique = (techniqueID, categoryID) => {\n        setCategories(categories => {\n           let updatedCategories = []\n          categories.forEach(category => {\n                if (category.id === categoryID)\n                {\n                    const updatedCatTechniques = category.catTechniques.filter(catTechnique => catTechnique.id !== techniqueID)\n         updatedCategories.push( {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques })\n                } else{\n                    updatedCategories.push(category)\n                }\n            })\n\n            return updatedCategories;\n        })\n        \n    }\n    \n \n\n\nfunction handleAddCatTechNote(newNotes, chosenCatTechnique) {\n    setCategories(categories => {\n      let  updatedCategories = [];\n        categories.forEach(category => {\n            let updatedCatTechniques = [];\n            category.catTechniques.forEach(catTechnique =>\n                {\n            if (catTechnique.id == chosenCatTechnique.id)\n            {\n            let updatedTechnique = {id: chosenCatTechnique.id, technique: chosenCatTechnique.technique, video:chosenCatTechnique.video, color: chosenCatTechnique.color, notes: newNotes}\n\n            updatedCatTechniques.push(updatedTechnique)\n            } else{\n                \n                updatedCatTechniques.push(catTechnique)\n            }\n        \n        \n        })\n        updatedCategories.push({ id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques })\n        })\n        \n        return updatedCategories;\n    });\n    \n}\n\nfunction handleDeleteCatTechNote(noteID, techniqueID)\n{\n    setCategories(categories => {\n\n     const updatedCategories = categories.map(category =>\n            {\n       let updatedCatTechniques = []\n         category.catTechniques.forEach(catTechnique =>\n            {\n                \n                if (catTechnique.id === techniqueID)\n                {\n                   const newNotes = catTechnique.notes.filter(note => note.noteID != noteID);\n\n                   updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, video:catTechnique.video, color: catTechnique.color, notes: newNotes});\n                    console.log('same')\n\n                } else\n                {\n                    updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, video:catTechnique.video, color: catTechnique.color, notes: catTechnique.notes});\n                }\n\n                \n            })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n    })\n    return updatedCategories\n})\n}\n\nfunction handleEditCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n    setCategories(categories => {\n       \n       const updatedCategories = categories.map(category =>\n            {\n        let updatedCatTechniques = [];\n        \n        category.catTechniques.forEach(catTechnique => {\n            let updatedCatTechniqueNotes = [];\n            if (catTechnique.id === chosenCatTechnique.id)\n             {\n                \n                catTechnique.notes.forEach(catTechniqueNote => {\n                    if (catTechniqueNote.noteID === noteID)\n                    { \n                        \n                        updatedCatTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                    } else{\n\n                        updatedCatTechniqueNotes.push({noteText:catTechniqueNote.noteText, noteID:catTechniqueNote.noteID, noteTitle:\"Note \" + (catTechniqueNote.noteID)})\n                    }\n                })\n                updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, video:catTechnique.video, color: catTechnique.color, notes: updatedCatTechniqueNotes})\n\n\n              } else\n              {\n                updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, video:catTechnique.video, color: catTechnique.color, notes:catTechnique.notes})\n              }\n\n\n            })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques };\n        })\n        return updatedCategories;\n    })\n}\n\nconst handleDrop = (e, chosenCategory) =>\n{\n \n  const draggable = document.querySelector('.dragging');\n  e.target.style.filter = \"brightness(100%)\";\n  techniques.forEach(technique => {\n\n        if (draggable.id === technique.id.toString())\n        {\n           const oldColor = chosenCategory.color;\n           \n            \n       const newColor = LightenDarkenColor(oldColor, -40);\n        \n        setCategories(categories => {\n\n\n         const updatedCategories = categories.map(category => {\n          \n               if (chosenCategory.id == category.id)\n               {\n\n                console.log(technique.video);\n               const updatedCatTechniques = [...category.catTechniques, {id: technique.id, technique: technique.technique, video:technique.video, color: newColor, notes: technique.notes} ]\n               return  {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n               }\n               else{\n                   return category\n               }\n\n               })\n\n               return updatedCategories;\n               })\n               handleDeleteTechnique(technique.id);\n        }\n\n        \n    })\n   \n    \n}\n\n    function LightenDarkenColor(col, amt) {\n  \n        var usePound = false;\n      \n        if (col[0] == \"#\") {\n            col = col.slice(1);\n            usePound = true;\n        }\n     \n        var num = parseInt(col,16);\n     \n        var r = (num >> 16) + amt;\n     \n        if (r > 255) r = 255;\n        else if  (r < 0) r = 0;\n     \n        var b = ((num >> 8) & 0x00FF) + amt;\n     \n        if (b > 255) b = 255;\n        else if  (b < 0) b = 0;\n     \n        var g = (num & 0x0000FF) + amt;\n     \n        if (g > 255) g = 255;\n        else if (g < 0) g = 0;\n     \n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n      \n    }\n\n\n\n    return (\n        <>\n        <div id=\"mainHeader\" class=\"header\">BJJ NOTES</div>\n        <div id=\"description\" class=\"header\">\n            <p>Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).</p>\n            <p>Drag and drop techniques into catgeories/category shortcuts to categorize them.</p>\n        </div>\n       \n        <div id=\"techniqueSection\">\n        <div class=\"inContain\">\n            <h1 class=\"titles\">Techniques</h1>\n        <label for=\"technique\">Technique</label>    \n        <input ref={techniqueRef} id=\"techniqueIn\" class=\"input titleIn\" type=\"text\"></input>\n        <button onClick={createLog} id=\"addTechnique\" class=\"input\">Add Technique</button>\n        </div>\n        <div id=\"techniqueContain\">\n        <Techniques handleDeleteTechnique={handleDeleteTechnique} handleDeleteNote={handleDeleteNote} editVideo={editVideo}  editNote={editNote} addNote={addNote} techniques={ techniques } />\n        </div>\n        </div>\n        <div id=\"categorySection\">\n            <div class=\"center\">\n        <h1 class=\"titles\">Categories</h1>\n        </div>\n        <div class=\"center\">\n        <h1 id=\"categoryKeysTitle\" >Category Shortcuts</h1>\n        </div>\n        <div class=\"center\">\n        <CategoryKeys handleDrop={handleDrop} categoryKeys={categoryKeys} />\n        </div>\n        <div  class=\"inContain\">\n        <label for=\"instructional\">Category</label>    \n        <input ref={categoryRef} id=\"categoryIn\" class=\"input titleIn\" type=\"text\"></input>\n        <button onClick={handleCreateCategory} id=\"addCategory\" class=\"input\">Add Category</button>\n        </div>\n        <Categories handleDrop={handleDrop} handleDeleteCatTechNote={handleDeleteCatTechNote} handleAddCatTechNote={handleAddCatTechNote} editCatTechVideo={editCatTechVideo} handleEditCatTechNote={handleEditCatTechNote} handleDeleteCategory={handleDeleteCategory} techniques={techniques} handleDeleteCatTechnique={handleDeleteCatTechnique} handleDeleteTechnique={handleDeleteTechnique} categories={categories}/>\n        </div>\n        </>\n    )\n    \n}\n\n\n",["70","71"],"/home/peter/Documents/React/bjj-notes/src/Notes.js",[],"/home/peter/Documents/React/bjj-notes/src/Note.js",[],"/home/peter/Documents/React/bjj-notes/src/Categories.js",[],"/home/peter/Documents/React/bjj-notes/src/Category.js",["72"],"import React, {useState} from 'react'\nimport CategorizedTechniques from './CategorizedTechniques';\n\n\nexport default function Category({category, handleDeleteCategory, handleEditCatTechNote, editCatTechVideo, handleAddCatTechNote, handleDeleteTechnique, handleDeleteCatTechnique, handleDrop, handleDeleteCatTechNote}) {\n\n     \n\n\n    const handleDragOver = (e) =>\n    {   e.preventDefault();\n        e.target.style.filter = \"brightness(200%)\";\n    }\n\n    \n \n    const handleDragLeave = (e) =>\n    {\n        e.target.style.filter = \"brightness(100%)\";\n    }\n\n  \n\n    return (\n        <div id={category.id} onDrop={(e) => handleDrop(e ,category)} onDragOver={handleDragOver}  onDragLeave={handleDragLeave} droppable=\"true\" style={{backgroundColor:category.color}} class=\"category\">\n            <h1 class=\"categoryHeaders\">{category.category }</h1>\n            <p style={{fontFamily:'\"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif'}}>Click the technique name to expand or contract.</p>\n            <CategorizedTechniques editCatTechVideo={editCatTechVideo} category={category} handleDeleteCatTechNote={handleDeleteCatTechNote} handleAddCatTechNote={handleAddCatTechNote} handleEditCatTechNote={handleEditCatTechNote} handleDeleteCatTechnique={handleDeleteCatTechnique} catTechniques={category.catTechniques} handleDeleteTechnique={handleDeleteTechnique}/>\n            <button class=\"categoryButtons\" onClick={() => handleDeleteCategory(category.id)}>Delete</button>\n        </div>\n    )\n}\n","/home/peter/Documents/React/bjj-notes/src/Techniques.js",[],"/home/peter/Documents/React/bjj-notes/src/Technique.js",[],"/home/peter/Documents/React/bjj-notes/src/CategorizedTechniques.js",[],"/home/peter/Documents/React/bjj-notes/src/CategorizedTechnique.js",["73"],"\nimport React, {useState,useRef} from 'react'\nimport CatTechNotes from './CatTechNotes'\n\nexport default function CategorizedTechnique({editCatTechVideo, handleAddCatTechNote, category, handleEditCatTechNote, handleDeleteCatTechNote, catTechnique, handleDeleteCatTechnique}) {\n\n    const addButton = useRef();\n    const [expanded, setExpanded] = useState('none');\n    const [editDisplay, setEditDisplay] = useState('block');\n    const [updateDisplay, setUpdateDisplay] = useState('none');\n    const [inputDisplay, setInputDisplay] = useState(\"none\");\n    const [videoDisplay, setVideoDisplay] = useState(\"none\");\n    const videoRef = useRef();\n\n   \n    \n\n    function addCatTechNote() {\n\n        const newNotes = [...catTechnique.notes, {noteText:\"Add your note here.\", noteID:catTechnique.notes.length + 1, noteTitle:\"Note \" + (catTechnique.notes.length + 1)}]\n        handleAddCatTechNote(newNotes, catTechnique);\n\n    }\n\n    function handleDragStart(e) {\n        e.target.classList.add('dragging');  // this / e.target is the source node.\n        \n      }\n\n      \n    function handleDragEnd(e) {\n        e.target.classList.remove('dragging');  // this / e.target is the source node.\n        \n      }\n\n      function handleEditVideo() \n      {\n        setEditDisplay('none');\n        setUpdateDisplay('block');\n        setInputDisplay('block');\n      }\n\n     function handleUpdateVideo()\n     {\n      setEditDisplay('block');\n      setUpdateDisplay('none');\n      setInputDisplay('none');\n\n     const videoLink = videoRef.current.value;\n\n  \n      if (videoLink.includes('https://www.youtube.com/'))\n      {\n       editCatTechVideo(videoLink, catTechnique.id);\n       setVideoDisplay('block')\n      } else {\n        editCatTechVideo(videoLink, catTechnique.id);\n        setVideoDisplay('none')\n        alert('Please use a valid Youtube link.')\n      }\n\n      }\n\n\n      function expand() {\n\n\n        if(expanded == 'none')\n        {\n          setExpanded('flex')\n          if (catTechnique.video !== \"\")\n          {\n            setVideoDisplay('block')\n          }\n        } else\n        {\n          setExpanded('none')\n        }\n      }\n\n\n    return (\n        <div id={catTechnique.id}  onDrag={handleDragStart} onDragEnd={handleDragEnd} style={{backgroundColor: catTechnique.color}} class=\"log\">\n    \n         <h3 onClick={expand}>{catTechnique.technique}</h3>\n     <div style={{display:expanded}} class=\"videoContain\">\n         <h3>Video</h3> \n            <iframe class=\"videoFrame\"\n            title=\"Technique Video\"\n            src={catTechnique.video}\n            allowFullScreen\n            frameBorder=\"0\"\n            style={{display:videoDisplay}}\n            >\n            </iframe>\n\n            <input style={{display:inputDisplay}} ref={videoRef}></input>\n            <button onClick={handleEditVideo} style={{display:editDisplay}} class=\"noteModify\">Add/Edit Video</button>\n            <button onClick={handleUpdateVideo} style={{display:updateDisplay}} class=\"noteModify\">Update</button>\n\n       </div>\n\n         <h4 style={{display:expanded}}>Notes</h4>\n\n         <CatTechNotes style={{display:expanded}} expanded={expanded} key={catTechnique.id} handleEditCatTechNote={handleEditCatTechNote} handleDeleteCatTechNote={handleDeleteCatTechNote} catTechnique={catTechnique}/>\n\n         <button style={{display:expanded}} ref={addButton} onClick={addCatTechNote} id=\"add\">+</button>\n         <button style={{display:expanded}} ref={addButton} onClick={() => handleDeleteCatTechnique(catTechnique.id, category.id)} id=\"delete\">Delete</button>\n\n     </div>\n    )\n}\n","/home/peter/Documents/React/bjj-notes/src/CatTechNotes.js",[],"/home/peter/Documents/React/bjj-notes/src/CatTechNote.js",[],"/home/peter/Documents/React/bjj-notes/src/CategoryKeys.js",[],"/home/peter/Documents/React/bjj-notes/src/CategoryKey.js",[],{"ruleId":"74","severity":1,"message":"75","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":11},{"ruleId":"78","severity":1,"message":"79","line":130,"column":34,"nodeType":"80","messageId":"81","endLine":130,"endColumn":36},{"ruleId":"78","severity":1,"message":"82","line":239,"column":84,"nodeType":"80","messageId":"81","endLine":239,"endColumn":86},{"ruleId":"78","severity":1,"message":"79","line":282,"column":33,"nodeType":"80","messageId":"81","endLine":282,"endColumn":35},{"ruleId":"78","severity":1,"message":"82","line":314,"column":83,"nodeType":"80","messageId":"81","endLine":314,"endColumn":85},{"ruleId":"78","severity":1,"message":"79","line":391,"column":38,"nodeType":"80","messageId":"81","endLine":391,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":419,"column":20,"nodeType":"80","messageId":"81","endLine":419,"endColumn":22},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"74","severity":1,"message":"87","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"79","line":68,"column":21,"nodeType":"80","messageId":"81","endLine":68,"endColumn":23},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]