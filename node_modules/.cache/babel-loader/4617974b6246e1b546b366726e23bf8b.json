{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/bjj-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport BJJLogs from './BJJLogs';\nimport Categories from './Categories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [logs, setBJJLogs] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryRef = useRef();\n  const techniqueRef = useRef();\n  let logNo = Math.floor(Math.random() * 100000);\n  let catNo = Math.floor(Math.random() * 100000);\n\n  function createLog(e) {\n    const technique = techniqueRef.current.value;\n    let color = \"#\" + getRandom(2000000, 1000000).toString(16);\n\n    for (let i = 0; i < logs.length; i++) {\n      if (color == logs[i].color) {\n        const replace = color.replace('#', '');\n        const number = parseInt(replace);\n        const newNumber = number + 100000;\n        color = newNumber;\n      }\n    }\n\n    if (technique === \"\") {\n      alert(\"Please enter a technique.\");\n      return;\n    }\n\n    setBJJLogs(prevLogs => {\n      return [...prevLogs, {\n        id: logNo,\n        technique: technique,\n        color: color\n      }];\n    });\n    techniqueRef.current.value = null;\n  }\n\n  function handleCreateCategory() {\n    let color = \"#\" + getRandom(2000000, 1000000).toString(16);\n    const category = categoryRef.current.value;\n\n    if (category === \"\") {\n      alert(\"Please enter a category.\");\n      return;\n    }\n\n    setCategories(prevCategories => {\n      return [...prevCategories, {\n        id: catNo,\n        category: category,\n        color: color\n      }];\n    });\n    categoryRef.current.value = null;\n  }\n\n  function getRandom(max, min) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const handleDeleteLog = logID => {\n    setBJJLogs(logs => {\n      return logs.filter(log => log.id !== logID);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainHeader\",\n      class: \"header\",\n      children: \"BJJ NOTES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"description\",\n      class: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Feel free to drag and drop your techniques into their respective categories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"techniques\",\n        class: \"header\",\n        children: \"Techniques\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"technique\",\n        children: \"Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: techniqueRef,\n        id: \"technique\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createLog,\n        id: \"addNote\",\n        class: \"input\",\n        children: \"Add Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BJJLogs, {\n      handleDeleteLog: handleDeleteLog,\n      logs: logs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"instructional\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: categoryRef,\n        id: \"category\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateCategory,\n        id: \"addCategory\",\n        class: \"input\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      categories: categories,\n      logs: logs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"s3qFxtDUhSUuyJ94AXKoIL3jtqA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/peter/Documents/React/bjj-notes/src/App.js"],"names":["React","useState","useRef","BJJLogs","Categories","App","logs","setBJJLogs","categories","setCategories","categoryRef","techniqueRef","logNo","Math","floor","random","catNo","createLog","e","technique","current","value","color","getRandom","toString","i","length","replace","number","parseInt","newNumber","alert","prevLogs","id","handleCreateCategory","category","prevCategories","max","min","handleDeleteLog","logID","filter","log"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport BJJLogs from './BJJLogs';\r\nimport Categories from './Categories';\r\n\r\n\r\nexport default function App() {\r\n   const [logs, setBJJLogs] = useState([]);\r\n   const [categories, setCategories] = useState([]);\r\n   const categoryRef = useRef();\r\n   const techniqueRef = useRef();\r\n   let logNo = Math.floor(Math.random()*100000);\r\n   let catNo = Math.floor(Math.random()*100000);\r\n   \r\n   function createLog(e) {\r\n       const technique = techniqueRef.current.value;\r\n       let color = \"#\" + getRandom(2000000, 1000000).toString(16);\r\n    \r\n       for(let i = 0; i < logs.length; i++)\r\n       { \r\n           if (color == logs[i].color)\r\n           {\r\n                const replace = color.replace('#', '');\r\n                const number= parseInt(replace)\r\n                const newNumber = number + 100000;\r\n                color = newNumber\r\n           }\r\n       }\r\n\r\n       if(technique === \"\")\r\n       { alert(\"Please enter a technique.\") \r\n       return;\r\n        }\r\n        \r\n       setBJJLogs(prevLogs => {\r\n      \r\n           return [...prevLogs, {id: logNo, technique:technique, color:color}];\r\n\r\n       })\r\n       \r\n  \r\n       techniqueRef.current.value = null\r\n    }\r\n\r\n    function handleCreateCategory()\r\n    {\r\n        let color = \"#\" + getRandom(2000000, 1000000).toString(16);\r\n        const category = categoryRef.current.value;\r\n\r\n        if(category === \"\")\r\n        { alert(\"Please enter a category.\") \r\n        return;\r\n         }\r\n\r\n         setCategories(prevCategories => {\r\n             return [...prevCategories, {id:catNo, category:category, color:color }]\r\n         })\r\n\r\n         categoryRef.current.value = null;\r\n\r\n    }\r\n\r\n    function getRandom(max, min) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    \r\n   const handleDeleteLog = (logID) => {\r\n    setBJJLogs(logs => {return logs.filter(log => log.id !== logID)})\r\n    \r\n   \r\n}\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n        <div id=\"mainHeader\" class=\"header\">BJJ NOTES</div>\r\n        <div id=\"description\" class=\"header\">\r\n            <p>Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).</p>\r\n            <p>Feel free to drag and drop your techniques into their respective categories.</p>\r\n        </div>\r\n        <div class=\"inContain\">\r\n        <div id=\"techniques\" class=\"header\">Techniques</div>\r\n        <label for=\"technique\">Technique</label>    \r\n        <input ref={techniqueRef} id=\"technique\" class=\"input\" type=\"text\"></input>\r\n        <button onClick={createLog} id=\"addNote\" class=\"input\">Add Technique</button>\r\n        </div>\r\n        <BJJLogs handleDeleteLog={handleDeleteLog} logs={ logs } />\r\n        <div class=\"inContain\">\r\n        <label for=\"instructional\">Categories</label>    \r\n        <input ref={categoryRef} id=\"category\" class=\"input\" type=\"text\"></input>\r\n        <button onClick={handleCreateCategory} id=\"addCategory\" class=\"input\">Add Category</button>\r\n        </div>\r\n        <Categories categories={categories} logs={logs}/>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}