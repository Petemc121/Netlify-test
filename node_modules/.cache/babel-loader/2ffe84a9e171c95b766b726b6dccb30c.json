{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/bjj-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Techniques from './Techniques';\nimport Categories from './Categories';\nimport CategoryKeys from './CategoryKeys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [techniques, setTechniques] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [categoryKeys, setCategoryKeys] = useState([]);\n  const categoryRef = useRef();\n  const techniqueRef = useRef();\n  let techniqueNo = Math.floor(Math.random() * 100000);\n  let catNo = Math.floor(Math.random() * 100000);\n\n  function createLog() {\n    const technique = techniqueRef.current.value;\n\n    if (technique === \"\") {\n      alert(\"Please enter a technique.\");\n      return;\n    }\n\n    setTechniques(prevTechniques => {\n      return [...prevTechniques, {\n        id: techniqueNo,\n        technique: technique,\n        color: 'rgb(21, 134, 152)',\n        notes: []\n      }];\n    });\n    techniqueRef.current.value = null;\n  }\n\n  function addNote(notes, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        if (technique.id == chosenTechnique.id) {\n          let updatedTechnique = {\n            id: chosenTechnique.id,\n            technique: chosenTechnique.technique,\n            color: chosenTechnique.color,\n            notes: notes\n          };\n          updatedTechniques.push(updatedTechnique);\n        } else {\n          updatedTechniques.push(technique);\n        }\n\n        console.log(updatedTechniques);\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function editNote(noteEdit, noteID, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        let updatedTechniqueNotes = [];\n\n        if (technique.id === chosenTechnique.id) {\n          technique.notes.forEach(techniqueNote => {\n            if (techniqueNote.noteID === noteID) {\n              updatedTechniqueNotes.push({\n                noteText: noteEdit,\n                noteID: noteID,\n                noteTitle: \"Note \" + noteID\n              });\n            } else {\n              updatedTechniqueNotes.push({\n                noteText: techniqueNote.noteText,\n                noteID: techniqueNote.noteID,\n                noteTitle: \"Note \" + techniqueNote.noteID\n              });\n            }\n          });\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: updatedTechniqueNotes\n          });\n        } else {\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          });\n        }\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function handleCreateCategory() {\n    // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\n    const colorArray = [\"#F94144\", \"#F3722C\", \"#F8961E\", \"#F9C74F\", \"#90BE6D\", \"#43AA8B\", \"#577590\", \"#541388\"];\n    const category = categoryRef.current.value;\n\n    if (category === \"\") {\n      alert(\"Please enter a category.\");\n      return;\n    }\n\n    if (categories.length > 7) {\n      alert(\"You've reached your category limit!\");\n      return;\n    }\n\n    setCategories(prevCategories => {\n      return [...prevCategories, {\n        id: catNo,\n        category: category,\n        color: colorArray[categories.length],\n        catTechniques: []\n      }];\n    });\n    setCategoryKeys(prevCategoryKeys => {\n      return [...prevCategoryKeys, {\n        id: catNo,\n        category: category,\n        color: colorArray[categories.length],\n        catKeyTechniques: []\n      }];\n    });\n    categoryRef.current.value = null;\n  }\n\n  const handleDeleteTechnique = techniqueID => {\n    setTechniques(techniques => {\n      return techniques.filter(technique => technique.id !== techniqueID);\n    });\n  };\n\n  const handleDeleteCategory = categoryID => {\n    setCategories(categories => {\n      return categories.filter(category => category.id !== categoryID);\n    });\n    setCategoryKeys(categoryKeys => {\n      return categoryKeys.filter(categoryKey => categoryKey.id !== categoryID);\n    });\n  };\n\n  function handleDeleteNote(noteID, techniqueID) {\n    setTechniques(techniques => {\n      return techniques.map(technique => {\n        if (technique.id === techniqueID) {\n          const newNotes = technique.notes.filter(note => note.noteID != noteID);\n          return {\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: newNotes\n          };\n        } else {\n          return {\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          };\n        }\n      });\n    });\n  }\n\n  const handleDeleteCatTechnique = (techniqueID, categoryID) => {\n    setCategories(categories => {\n      let updatedCategories = [];\n      categories.forEach(category => {\n        if (category.id === categoryID) {\n          const updatedCatTechniques = category.catTechniques.filter(catTechnique => catTechnique.id !== techniqueID);\n          updatedCategories.push({\n            id: category.id,\n            category: category.category,\n            color: category.color,\n            catTechniques: updatedCatTechniques\n          });\n        } else {\n          updatedCategories.push(category);\n        }\n      });\n      return updatedCategories;\n    });\n  };\n\n  function handleAddCatTechNote(newNotes, chosenCatTechnique) {\n    setCategories(categories => {\n      let updatedCategories = [];\n      categories.forEach(category => {\n        let updatedCatTechniques = [];\n        category.catTechniques.forEach(catTechnique => {\n          if (catTechnique.id == chosenCatTechnique.id) {\n            let updatedTechnique = {\n              id: chosenCatTechnique.id,\n              technique: chosenCatTechnique.technique,\n              color: chosenCatTechnique.color,\n              notes: newNotes\n            };\n            updatedCatTechniques.push(updatedTechnique);\n          } else {\n            updatedCatTechniques.push(catTechnique);\n          }\n        });\n        updatedCategories.push({\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        });\n      });\n      return updatedCategories;\n    });\n  }\n\n  function handleDeleteCatTechNote(noteID, techniqueID) {\n    setCategories(categories => {\n      const updatedCategories = categories.map(category => {\n        let updatedCatTechniques = [];\n        category.catTechniques.forEach(catTechnique => {\n          if (catTechnique.id === techniqueID) {\n            const newNotes = catTechnique.notes.filter(note => note.noteID != noteID);\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: newNotes\n            });\n            console.log('same');\n          } else {\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: catTechnique.notes\n            });\n          }\n        });\n        return {\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        };\n      });\n      return updatedCategories;\n    });\n  }\n\n  function handleEditCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n    setCategories(categories => {\n      const updatedCategories = categories.map(category => {\n        let updatedCatTechniques = [];\n        category.catTechniques.forEach(catTechnique => {\n          let updatedCatTechniqueNotes = [];\n\n          if (catTechnique.id === chosenCatTechnique.id) {\n            catTechnique.notes.forEach(catTechniqueNote => {\n              if (catTechniqueNote.noteID === noteID) {\n                updatedCatTechniqueNotes.push({\n                  noteText: noteEdit,\n                  noteID: noteID,\n                  noteTitle: \"Note \" + noteID\n                });\n              } else {\n                updatedCatTechniqueNotes.push({\n                  noteText: catTechniqueNote.noteText,\n                  noteID: catTechniqueNote.noteID,\n                  noteTitle: \"Note \" + catTechniqueNote.noteID\n                });\n              }\n            });\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: updatedCatTechniqueNotes\n            });\n          } else {\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: catTechnique.notes\n            });\n          }\n        });\n        return {\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        };\n      });\n      return updatedCategories;\n    });\n  }\n\n  const handleDrop = (e, chosenCategory) => {\n    const draggable = document.querySelector('.dragging');\n    e.target.style.filter = \"brightness(100%)\";\n    techniques.forEach(technique => {\n      if (draggable.id === technique.id.toString()) {\n        const oldColor = chosenCategory.color;\n        const newColor = LightenDarkenColor(oldColor, -40);\n        setCategories(categories => {\n          const updatedCategories = categories.map(category => {\n            if (chosenCategory.id == category.id) {\n              const updatedCatTechniques = [...category.catTechniques, {\n                id: technique.id,\n                technique: technique.technique,\n                color: newColor,\n                notes: technique.notes\n              }];\n              return {\n                id: category.id,\n                category: category.category,\n                color: category.color,\n                catTechniques: updatedCatTechniques\n              };\n            } else {\n              return category;\n            }\n          });\n          return updatedCategories;\n        });\n      }\n\n      handleDeleteTechnique(technique.id);\n    });\n  };\n\n  function LightenDarkenColor(col, amt) {\n    var usePound = false;\n\n    if (col[0] == \"#\") {\n      col = col.slice(1);\n      usePound = true;\n    }\n\n    var num = parseInt(col, 16);\n    var r = (num >> 16) + amt;\n    if (r > 255) r = 255;else if (r < 0) r = 0;\n    var b = (num >> 8 & 0x00FF) + amt;\n    if (b > 255) b = 255;else if (b < 0) b = 0;\n    var g = (num & 0x0000FF) + amt;\n    if (g > 255) g = 255;else if (g < 0) g = 0;\n    return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainHeader\",\n      class: \"header\",\n      children: \"BJJ NOTES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"description\",\n      class: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop techniques into catgeories/category shortcuts to categorize them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"technique\",\n        children: \"Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: techniqueRef,\n        id: \"technique\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createLog,\n        id: \"addNote\",\n        class: \"input\",\n        children: \"Add Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"techniqueContain\",\n      children: /*#__PURE__*/_jsxDEV(Techniques, {\n        handleDeleteTechnique: handleDeleteTechnique,\n        handleDeleteNote: handleDeleteNote,\n        editNote: editNote,\n        addNote: addNote,\n        techniques: techniques\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"categoryKeysTitle\",\n        style: {\n          color: \"white\"\n        },\n        children: \"Category Shortcuts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CategoryKeys, {\n        handleDrop: handleDrop,\n        categoryKeys: categoryKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"categoriesIn\",\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"instructional\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: categoryRef,\n        id: \"category\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateCategory,\n        id: \"addCategory\",\n        class: \"input\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      handleDrop: handleDrop,\n      handleDeleteCatTechNote: handleDeleteCatTechNote,\n      handleAddCatTechNote: handleAddCatTechNote,\n      handleEditCatTechNote: handleEditCatTechNote,\n      handleDeleteCategory: handleDeleteCategory,\n      techniques: techniques,\n      handleDeleteCatTechnique: handleDeleteCatTechnique,\n      handleDeleteTechnique: handleDeleteTechnique,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"R4M/TXGX4nzuUZpmCMcNAkwkdTM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/peter/Documents/React/bjj-notes/src/App.js"],"names":["React","useState","useRef","Techniques","Categories","CategoryKeys","App","techniques","setTechniques","categories","setCategories","categoryKeys","setCategoryKeys","categoryRef","techniqueRef","techniqueNo","Math","floor","random","catNo","createLog","technique","current","value","alert","prevTechniques","id","color","notes","addNote","chosenTechnique","updatedTechniques","forEach","updatedTechnique","push","console","log","editNote","noteEdit","noteID","updatedTechniqueNotes","techniqueNote","noteText","noteTitle","handleCreateCategory","colorArray","category","length","prevCategories","catTechniques","prevCategoryKeys","catKeyTechniques","handleDeleteTechnique","techniqueID","filter","handleDeleteCategory","categoryID","categoryKey","handleDeleteNote","map","newNotes","note","handleDeleteCatTechnique","updatedCategories","updatedCatTechniques","catTechnique","handleAddCatTechNote","chosenCatTechnique","handleDeleteCatTechNote","handleEditCatTechNote","updatedCatTechniqueNotes","catTechniqueNote","handleDrop","e","chosenCategory","draggable","document","querySelector","target","style","toString","oldColor","newColor","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Techniques from './Techniques';\nimport Categories from './Categories';\nimport CategoryKeys from './CategoryKeys';\n\n\nexport default function App() {\n   const [techniques, setTechniques] = useState([]);\n   const [categories, setCategories] = useState([]);\n   const [categoryKeys, setCategoryKeys] = useState([]);\n   const categoryRef = useRef();\n   const techniqueRef = useRef();\n   let techniqueNo = Math.floor(Math.random()*100000);\n   let catNo = Math.floor(Math.random()*100000);\n   \n   \n   function createLog() {\n       const technique = techniqueRef.current.value;\n    \n\n       if(technique === \"\")\n       { alert(\"Please enter a technique.\") \n       return;\n        }\n        \n       setTechniques(prevTechniques => {\n      \n           return [...prevTechniques, {id: techniqueNo, technique:technique, color:'rgb(21, 134, 152)', notes:[]}];\n\n       });\n\n  \n       techniqueRef.current.value = null;\n    }\n\n    function addNote(notes, chosenTechnique) {\n        setTechniques(techniques => {\n          let  updatedTechniques = [];\n            techniques.forEach(technique => {\n                if (technique.id == chosenTechnique.id)\n                {\n                let updatedTechnique = {id: chosenTechnique.id, technique: chosenTechnique.technique, color: chosenTechnique.color, notes: notes}\n\n                updatedTechniques.push(updatedTechnique)\n                } else{\n                    \n                    updatedTechniques.push(technique)\n                }\n            \n             console.log(updatedTechniques)\n            })\n            \n            return updatedTechniques;\n        });\n        \n    }\n\n    function editNote(noteEdit, noteID, chosenTechnique) {\n        setTechniques(techniques => {\n            let updatedTechniques = [];\n            \n            techniques.forEach(technique => {\n                let updatedTechniqueNotes = [];\n                if (technique.id === chosenTechnique.id)\n                 {\n\n                    technique.notes.forEach(techniqueNote => {\n                        if (techniqueNote.noteID === noteID)\n                        { \n                            updatedTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                        } else\n                        {\n\n                            updatedTechniqueNotes.push({noteText:techniqueNote.noteText, noteID:techniqueNote.noteID, noteTitle:\"Note \" + (techniqueNote.noteID)})\n                        }\n                    })\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes: updatedTechniqueNotes})\n\n\n                  } else\n                  {\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes:technique.notes})\n                  }\n\n\n                })\n\n                return updatedTechniques;\n            })\n\n        }\n\n\n    \n\n    function handleCreateCategory()\n    {\n\n        // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\n        const colorArray = [\"#F94144\",\"#F3722C\",\"#F8961E\",\"#F9C74F\", \"#90BE6D\", \"#43AA8B\", \"#577590\", \"#541388\"]\n        const category = categoryRef.current.value;\n\n        if(category === \"\")\n        { alert(\"Please enter a category.\") \n        return;\n         }\n\n         if(categories.length > 7)\n         {\n             alert(\"You've reached your category limit!\")\n             return\n         }\n\n         setCategories(prevCategories => {\n             return [...prevCategories, {id:catNo, category:category, color:colorArray[categories.length], catTechniques:[] }]\n         })\n\n         setCategoryKeys(prevCategoryKeys => {\n            return [...prevCategoryKeys, {id:catNo, category:category, color:colorArray[categories.length], catKeyTechniques:[] }]\n         })\n\n         categoryRef.current.value = null;\n\n    }\n\n   \n\n    \n   const handleDeleteTechnique = (techniqueID) => {\n    setTechniques(techniques => {return techniques.filter(technique => technique.id !== techniqueID)}) \n}\n\nconst handleDeleteCategory = (categoryID) =>\n{\n    setCategories(categories => {return categories.filter(category => category.id !== categoryID)})\n    setCategoryKeys(categoryKeys => {return categoryKeys.filter(categoryKey => categoryKey.id !== categoryID)})\n}\n\n\n\n    function handleDeleteNote(noteID, techniqueID)\n    {\n        setTechniques(techniques => {\n           return techniques.map(technique =>\n                {\n                    \n                    if (technique.id === techniqueID)\n                    {\n                       const newNotes = technique.notes.filter(note => note.noteID != noteID);\n\n                       return {id: technique.id, technique: technique.technique, color: technique.color, notes: newNotes}\n\n                    } else\n                    {\n                        return {id: technique.id, technique: technique.technique, color: technique.color, notes: technique.notes}\n                    }\n\n                    \n                })\n        })\n    }\n\n    \n    const handleDeleteCatTechnique = (techniqueID, categoryID) => {\n        setCategories(categories => {\n           let updatedCategories = []\n          categories.forEach(category => {\n                if (category.id === categoryID)\n                {\n                    const updatedCatTechniques = category.catTechniques.filter(catTechnique => catTechnique.id !== techniqueID)\n         updatedCategories.push( {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques })\n                } else{\n                    updatedCategories.push(category)\n                }\n            })\n\n            return updatedCategories;\n        })\n        \n    }\n    \n \n\n\nfunction handleAddCatTechNote(newNotes, chosenCatTechnique) {\n    setCategories(categories => {\n      let  updatedCategories = [];\n        categories.forEach(category => {\n            let updatedCatTechniques = [];\n            category.catTechniques.forEach(catTechnique =>\n                {\n            if (catTechnique.id == chosenCatTechnique.id)\n            {\n            let updatedTechnique = {id: chosenCatTechnique.id, technique: chosenCatTechnique.technique, color: chosenCatTechnique.color, notes: newNotes}\n\n            updatedCatTechniques.push(updatedTechnique)\n            } else{\n                \n                updatedCatTechniques.push(catTechnique)\n            }\n        \n        \n        })\n        updatedCategories.push({ id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques })\n        })\n        \n        return updatedCategories;\n    });\n    \n}\n\nfunction handleDeleteCatTechNote(noteID, techniqueID)\n{\n    setCategories(categories => {\n\n     const updatedCategories = categories.map(category =>\n            {\n       let updatedCatTechniques = []\n         category.catTechniques.forEach(catTechnique =>\n            {\n                \n                if (catTechnique.id === techniqueID)\n                {\n                   const newNotes = catTechnique.notes.filter(note => note.noteID != noteID);\n\n                   updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: newNotes});\n                    console.log('same')\n\n                } else\n                {\n                    updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: catTechnique.notes});\n                }\n\n                \n            })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n    })\n    return updatedCategories\n})\n}\n\nfunction handleEditCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n    setCategories(categories => {\n       \n       const updatedCategories = categories.map(category =>\n            {\n        let updatedCatTechniques = [];\n        \n        category.catTechniques.forEach(catTechnique => {\n            let updatedCatTechniqueNotes = [];\n            if (catTechnique.id === chosenCatTechnique.id)\n             {\n                \n                catTechnique.notes.forEach(catTechniqueNote => {\n                    if (catTechniqueNote.noteID === noteID)\n                    { \n                        \n                        updatedCatTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                    } else{\n\n                        updatedCatTechniqueNotes.push({noteText:catTechniqueNote.noteText, noteID:catTechniqueNote.noteID, noteTitle:\"Note \" + (catTechniqueNote.noteID)})\n                    }\n                })\n                updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: updatedCatTechniqueNotes})\n\n\n              } else\n              {\n                updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes:catTechnique.notes})\n              }\n\n\n            })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques };\n        })\n        return updatedCategories;\n    })\n}\n\nconst handleDrop = (e, chosenCategory) =>\n{\n \n  const draggable = document.querySelector('.dragging');\n  e.target.style.filter = \"brightness(100%)\";\n  techniques.forEach(technique => {\n\n        if (draggable.id === technique.id.toString())\n        {\n           const oldColor = chosenCategory.color;\n           \n            \n       const newColor = LightenDarkenColor(oldColor, -40);\n        \n        setCategories(categories => {\n\n\n         const updatedCategories = categories.map(category => {\n          \n               if (chosenCategory.id == category.id)\n               {\n               const updatedCatTechniques = [...category.catTechniques, {id: technique.id, technique: technique.technique, color: newColor, notes: technique.notes} ]\n               return  {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n               }\n               else{\n                   return category\n               }\n\n               })\n\n               return updatedCategories;\n               })\n        }\n\n        handleDeleteTechnique(technique.id);\n    })\n   \n\n}\n\n    function LightenDarkenColor(col, amt) {\n  \n        var usePound = false;\n      \n        if (col[0] == \"#\") {\n            col = col.slice(1);\n            usePound = true;\n        }\n     \n        var num = parseInt(col,16);\n     \n        var r = (num >> 16) + amt;\n     \n        if (r > 255) r = 255;\n        else if  (r < 0) r = 0;\n     \n        var b = ((num >> 8) & 0x00FF) + amt;\n     \n        if (b > 255) b = 255;\n        else if  (b < 0) b = 0;\n     \n        var g = (num & 0x0000FF) + amt;\n     \n        if (g > 255) g = 255;\n        else if (g < 0) g = 0;\n     \n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n      \n    }\n\n\n\n    return (\n        <>\n        <div id=\"mainHeader\" class=\"header\">BJJ NOTES</div>\n        <div id=\"description\" class=\"header\">\n            <p>Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).</p>\n            <p>Drag and drop techniques into catgeories/category shortcuts to categorize them.</p>\n        </div>\n       \n       \n        <div class=\"inContain\">\n        <label for=\"technique\">Technique</label>    \n        <input ref={techniqueRef} id=\"technique\" class=\"input\" type=\"text\"></input>\n        <button onClick={createLog} id=\"addNote\" class=\"input\">Add Technique</button>\n        </div>\n        <div id=\"techniqueContain\">\n        <Techniques handleDeleteTechnique={handleDeleteTechnique} handleDeleteNote={handleDeleteNote}  editNote={editNote} addNote={addNote} techniques={ techniques } />\n        </div>\n        <div class=\"center\">\n        <h1 id=\"categoryKeysTitle\" style={{color:\"white\"}}>Category Shortcuts</h1>\n        </div>\n        <div class=\"center\">\n        <CategoryKeys handleDrop={handleDrop} categoryKeys={categoryKeys} />\n        </div>\n        <div id=\"categoriesIn\" class=\"inContain\">\n        <label for=\"instructional\">Category</label>    \n        <input ref={categoryRef} id=\"category\" class=\"input\" type=\"text\"></input>\n        <button onClick={handleCreateCategory} id=\"addCategory\" class=\"input\">Add Category</button>\n        </div>\n        <Categories handleDrop={handleDrop} handleDeleteCatTechNote={handleDeleteCatTechNote} handleAddCatTechNote={handleAddCatTechNote} handleEditCatTechNote={handleEditCatTechNote} handleDeleteCategory={handleDeleteCategory} techniques={techniques} handleDeleteCatTechnique={handleDeleteCatTechnique} handleDeleteTechnique={handleDeleteTechnique} categories={categories}/>\n        </>\n    )\n    \n}\n\n\n"]},"metadata":{},"sourceType":"module"}