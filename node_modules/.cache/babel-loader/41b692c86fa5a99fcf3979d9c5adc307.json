{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/bjj-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport BJJLogs from './BJJLogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [logs, setBJJLogs] = useState([]);\n  const instructionalRef = useRef();\n  const techniqueRef = useRef();\n  let logNo = Math.floor(Math.random() * 100000);\n\n  function createLog(e) {\n    const instructional = instructionalRef.current.value;\n    const technique = techniqueRef.current.value;\n    const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\n    if (technique === \"\") {\n      alert(\"Please enter a technique.\");\n      return;\n    }\n\n    setBJJLogs(prevLogs => {\n      console.log(logNo);\n      return [...prevLogs, {\n        id: logNo,\n        instructional: instructional,\n        technique: technique,\n        color: color\n      }];\n    });\n    instructionalRef.current.value = null;\n    techniqueRef.current.value = null;\n  }\n\n  const handleDeleteLog = logID => {\n    const findLog = logs.map(function (e) {\n      return e.id;\n    }).indexOf(logID);\n    console.log(findLog);\n    setBJJLogs(logs => {\n      return logs.splice(2, 1);\n    });\n    console.log(logs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: \"BJJ NOTES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"instructional\",\n        children: \"Instructional\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: instructionalRef,\n        id: \"instructional\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"technique\",\n        children: \"Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: techniqueRef,\n        id: \"technique\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createLog,\n        id: \"addNote\",\n        class: \"input\",\n        children: \"Add Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BJJLogs, {\n      handleDeleteLog: handleDeleteLog,\n      logs: logs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"wCHO1yYapCB0zuhDWeldq0oOUCE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/peter/Documents/React/bjj-notes/src/App.js"],"names":["React","useState","useRef","BJJLogs","App","logs","setBJJLogs","instructionalRef","techniqueRef","logNo","Math","floor","random","createLog","e","instructional","current","value","technique","color","toString","alert","prevLogs","console","log","id","handleDeleteLog","logID","findLog","map","indexOf","splice"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport BJJLogs from './BJJLogs';\r\n\r\n\r\nexport default function App() {\r\n   const [logs, setBJJLogs] = useState([]);\r\n   const instructionalRef = useRef();\r\n   const techniqueRef = useRef();\r\n   let logNo = Math.floor(Math.random()*100000);\r\n    function createLog(e) {\r\n       const instructional =  instructionalRef.current.value;\r\n       const technique = techniqueRef.current.value;\r\n       const color = \"#\" + Math.floor(Math.random()*16777215).toString(16);\r\n       if(technique === \"\")\r\n       { alert(\"Please enter a technique.\") \r\n       return;\r\n        }\r\n        \r\n       setBJJLogs(prevLogs => {\r\n        console.log(logNo)\r\n           return [...prevLogs, {id: logNo, instructional:instructional, technique:technique, color:color}];\r\n\r\n       })\r\n       \r\n       instructionalRef.current.value = null\r\n       techniqueRef.current.value = null\r\n    }\r\n\r\n    \r\n   const handleDeleteLog = (logID) => {\r\n    const findLog = logs.map(function(e) {return e.id}).indexOf(logID)\r\n    console.log(findLog)\r\n    setBJJLogs(logs => {return logs.splice(2, 1)})\r\n    console.log(logs)\r\n    \r\n}\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n        <div id=\"header\">BJJ NOTES</div>\r\n        <div id=\"inContain\">\r\n        <label for=\"instructional\">Instructional</label>    \r\n        <input ref={instructionalRef} id=\"instructional\" class=\"input\" type=\"text\"></input>\r\n        <label for=\"technique\">Technique</label>    \r\n        <input ref={techniqueRef} id=\"technique\" class=\"input\" type=\"text\"></input>\r\n        <button onClick={createLog} id=\"addNote\" class=\"input\">Add Technique</button>\r\n        </div>\r\n        <BJJLogs handleDeleteLog={handleDeleteLog} logs={ logs } />\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}