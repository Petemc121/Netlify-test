{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/bjj-notes/src/Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CategorizedTechniques from './CategorizedTechniques';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category({\n  category,\n  editNote,\n  addNote,\n  techniques,\n  handleDeleteTechnique\n}) {\n  _s();\n\n  const [catTechniques, setCatTechniques] = useState([]);\n\n  const handleDrop = e => {\n    const draggable = document.querySelector('.dragging');\n    e.target.style.filter = \"brightness(100%)\";\n    techniques.forEach(technique => {\n      if (draggable.id === technique.id.toString()) {\n        setCatTechniques(prevCatTechniques => {\n          return [...prevCatTechniques, {\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          }];\n        });\n      }\n\n      console.log(catTechniques);\n    });\n  };\n\n  function addCatTechNote(notes, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        if (technique.id == chosenTechnique.id) {\n          let updatedTechnique = {\n            id: chosenTechnique.id,\n            technique: chosenTechnique.technique,\n            color: chosenTechnique.color,\n            notes: notes\n          };\n          updatedTechniques.push(updatedTechnique);\n        } else {\n          updatedTechniques.push(technique);\n        }\n\n        console.log(updatedTechniques);\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function editCatTechNote(noteEdit, noteID, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        let updatedTechniqueNotes = [];\n\n        if (technique.id === chosenTechnique.id) {\n          technique.notes.forEach(techniqueNote => {\n            if (techniqueNote.noteID === noteID) {\n              updatedTechniqueNotes.push({\n                noteText: noteEdit,\n                noteID: noteID,\n                noteTitle: \"Note \" + noteID\n              });\n            } else {\n              updatedTechniqueNotes.push({\n                noteText: techniqueNote.noteText,\n                noteID: techniqueNote.noteID,\n                noteTitle: \"Note \" + techniqueNote.noteID\n              });\n            }\n          });\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: updatedTechniqueNotes\n          });\n        } else {\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          });\n        }\n      });\n      return updatedTechniques;\n    });\n  }\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.target.style.filter = \"brightness(200%)\";\n  };\n\n  const handleDragLeave = e => {\n    e.target.style.filter = \"brightness(100%)\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    droppable: \"true\",\n    style: {\n      backgroundColor: category.color\n    },\n    class: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: category.category + \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategorizedTechniques, {\n      editNote: editNote,\n      addNote: addNote,\n      handleDeleteTechnique: handleDeleteTechnique,\n      catTechniques: catTechniques\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Category, \"4eDMECyBhcZ4ZcCAFdORF4xblYo=\");\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/peter/Documents/React/bjj-notes/src/Category.js"],"names":["React","useState","CategorizedTechniques","Category","category","editNote","addNote","techniques","handleDeleteTechnique","catTechniques","setCatTechniques","handleDrop","e","draggable","document","querySelector","target","style","filter","forEach","technique","id","toString","prevCatTechniques","color","notes","console","log","addCatTechNote","chosenTechnique","setTechniques","updatedTechniques","updatedTechnique","push","editCatTechNote","noteEdit","noteID","updatedTechniqueNotes","techniqueNote","noteText","noteTitle","handleDragOver","preventDefault","handleDragLeave","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport CategorizedTechniques from './CategorizedTechniques';\n\n\nexport default function Category({category, editNote, addNote, techniques, handleDeleteTechnique}) {\n        const [catTechniques, setCatTechniques] = useState([])\n\n    \n\n    const handleDrop = (e) =>\n    {\n     \n      const draggable = document.querySelector('.dragging');\n      e.target.style.filter = \"brightness(100%)\";\n      techniques.forEach(technique => {\n\n            if (draggable.id === technique.id.toString())\n            {\n            setCatTechniques(prevCatTechniques => {\n               \n                return [...prevCatTechniques, {id: technique.id, technique:technique.technique, color:technique.color, notes: technique.notes} ]\n                \n            })\n            }\n\n            console.log(catTechniques)\n        })\n       \n\n    }\n\n    function addCatTechNote(notes, chosenTechnique) {\n        setTechniques(techniques => {\n          let  updatedTechniques = [];\n            techniques.forEach(technique => {\n                if (technique.id == chosenTechnique.id)\n                {\n                let updatedTechnique = {id: chosenTechnique.id, technique: chosenTechnique.technique, color: chosenTechnique.color, notes: notes}\n\n                updatedTechniques.push(updatedTechnique)\n                } else{\n                    \n                    updatedTechniques.push(technique)\n                }\n            \n             console.log(updatedTechniques)\n            })\n            \n            return updatedTechniques;\n        });\n        \n    }\n\n    function editCatTechNote(noteEdit, noteID, chosenTechnique) {\n        setTechniques(techniques => {\n            let updatedTechniques = [];\n            \n            techniques.forEach(technique => {\n                let updatedTechniqueNotes = [];\n                if (technique.id === chosenTechnique.id)\n                 {\n\n                    technique.notes.forEach(techniqueNote => {\n                        if (techniqueNote.noteID === noteID)\n                        { \n                            updatedTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                        } else{\n\n                            updatedTechniqueNotes.push({noteText:techniqueNote.noteText, noteID:techniqueNote.noteID, noteTitle:\"Note \" + (techniqueNote.noteID)})\n                        }\n                    })\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes: updatedTechniqueNotes})\n\n\n                  } else\n                  {\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes:technique.notes})\n                  }\n\n\n                })\n\n                return updatedTechniques;\n            })\n\n        }\n    \n\n    const handleDragOver = (e) =>\n    {   e.preventDefault();\n        e.target.style.filter = \"brightness(200%)\";\n    }\n\n    \n \n    const handleDragLeave = (e) =>\n    {\n        e.target.style.filter = \"brightness(100%)\";\n    }\n\n    \n\n    return (\n        <div  onDrop={handleDrop} onDragOver={handleDragOver}  onDragLeave={handleDragLeave} droppable=\"true\" style={{backgroundColor:category.color}} class=\"category\">\n            <h1>{category.category + \":\"}</h1>\n            <CategorizedTechniques editNote={editNote} addNote={addNote} handleDeleteTechnique={handleDeleteTechnique} catTechniques={catTechniques}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}