{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/bjj-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Techniques from './Techniques';\nimport Categories from './Categories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [techniques, setTechniques] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryRef = useRef();\n  const techniqueRef = useRef();\n  let techniqueNo = Math.floor(Math.random() * 100000);\n  let catNo = Math.floor(Math.random() * 100000);\n\n  function createLog(e) {\n    const technique = techniqueRef.current.value;\n    let color = \"#\" + getRandom(2000000, 1000000).toString(16);\n\n    for (let i = 0; i < techniques.length; i++) {\n      if (color === techniques[i].color) {\n        const replace = color.replace('#', '');\n        const number = parseInt(replace);\n        const newNumber = number + 100000;\n        color = newNumber;\n      }\n    }\n\n    if (technique === \"\") {\n      alert(\"Please enter a technique.\");\n      return;\n    }\n\n    setTechniques(prevTechniques => {\n      return [...prevTechniques, {\n        id: techniqueNo,\n        technique: technique,\n        color: color,\n        notes: []\n      }];\n    });\n    techniqueRef.current.value = null;\n  }\n\n  function addNote(notes, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        if (technique.id == chosenTechnique.id) {\n          let updatedTechnique = {\n            id: chosenTechnique.id,\n            technique: chosenTechnique.technique,\n            color: chosenTechnique.color,\n            notes: notes\n          };\n          updatedTechniques.push(updatedTechnique);\n        } else {\n          updatedTechniques.push(technique);\n        }\n\n        console.log(updatedTechniques);\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function editNote(noteEdit, noteID, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        let updatedTechniqueNotes = [];\n\n        if (technique.id === chosenTechnique.id) {\n          technique.notes.forEach(techniqueNote => {\n            if (techniqueNote.noteID === noteID) {\n              updatedTechniqueNotes.push({\n                noteText: noteEdit,\n                noteID: noteID,\n                noteTitle: \"Note \" + noteID\n              });\n            } else {\n              updatedTechniqueNotes.push({\n                noteText: techniqueNote.noteText,\n                noteID: techniqueNote.noteID,\n                noteTitle: \"Note \" + techniqueNote.noteID\n              });\n            }\n          });\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: updatedTechniqueNotes\n          });\n        } else {\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          });\n        }\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function handleCreateCategory() {\n    // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\n    const colorArray = [\"#08892c\", \"#8e057e\", \"#3f3f8c\", \"#874c47\", \"#dd9300\", \"#a32f2f\", \"#d1ca00\", \"#2d2020\"];\n    const category = categoryRef.current.value;\n\n    if (category === \"\") {\n      alert(\"Please enter a category.\");\n      return;\n    }\n\n    setCategories(prevCategories => {\n      return [...prevCategories, {\n        id: catNo,\n        category: category,\n        color: colorArray[categories.length]\n      }];\n    });\n    categoryRef.current.value = null;\n  }\n\n  function getRandom(max, min) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const handleDeleteTechnique = techniqueID => {\n    setTechniques(techniques => {\n      return techniques.filter(technique => technique.id !== techniqueID);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainHeader\",\n      class: \"header\",\n      children: \"BJJ NOTES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"description\",\n      class: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Feel free to drag and drop your techniques into their respective categories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"techniques\",\n        class: \"header\",\n        children: \"Techniques\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"technique\",\n        children: \"Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: techniqueRef,\n        id: \"technique\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createLog,\n        id: \"addNote\",\n        class: \"input\",\n        children: \"Add Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Techniques, {\n      handleDeleteTechnique: handleDeleteTechnique,\n      editNote: editNote,\n      addNote: addNote,\n      techniques: techniques\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"instructional\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: categoryRef,\n        id: \"category\",\n        class: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateCategory,\n        id: \"addCategory\",\n        class: \"input\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      techniques: techniques,\n      editNote: editNote,\n      addNote: addNote,\n      handleDeleteTechnique: handleDeleteTechnique,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/fjIKj13232+pvYsCJ2JVBHrKgg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/peter/Documents/React/bjj-notes/src/App.js"],"names":["React","useState","useRef","Techniques","Categories","App","techniques","setTechniques","categories","setCategories","categoryRef","techniqueRef","techniqueNo","Math","floor","random","catNo","createLog","e","technique","current","value","color","getRandom","toString","i","length","replace","number","parseInt","newNumber","alert","prevTechniques","id","notes","addNote","chosenTechnique","updatedTechniques","forEach","updatedTechnique","push","console","log","editNote","noteEdit","noteID","updatedTechniqueNotes","techniqueNote","noteText","noteTitle","handleCreateCategory","colorArray","category","prevCategories","max","min","handleDeleteTechnique","techniqueID","filter"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Techniques from './Techniques';\r\nimport Categories from './Categories';\r\n\r\n\r\nexport default function App() {\r\n   const [techniques, setTechniques] = useState([]);\r\n   const [categories, setCategories] = useState([]);\r\n   const categoryRef = useRef();\r\n   const techniqueRef = useRef();\r\n   let techniqueNo = Math.floor(Math.random()*100000);\r\n   let catNo = Math.floor(Math.random()*100000);\r\n   \r\n   \r\n   function createLog(e) {\r\n       const technique = techniqueRef.current.value;\r\n       let color = \"#\" + getRandom(2000000, 1000000).toString(16);\r\n    \r\n       for(let i = 0; i < techniques.length; i++)\r\n       { \r\n           if (color === techniques[i].color)\r\n           {\r\n                const replace = color.replace('#', '');\r\n                const number= parseInt(replace)\r\n                const newNumber = number + 100000;\r\n                color = newNumber\r\n           }\r\n       }\r\n\r\n       if(technique === \"\")\r\n       { alert(\"Please enter a technique.\") \r\n       return;\r\n        }\r\n        \r\n       setTechniques(prevTechniques => {\r\n      \r\n           return [...prevTechniques, {id: techniqueNo, technique:technique, color:color, notes:[]}];\r\n\r\n       });\r\n\r\n  \r\n       techniqueRef.current.value = null;\r\n    }\r\n\r\n    function addNote(notes, chosenTechnique) {\r\n        setTechniques(techniques => {\r\n          let  updatedTechniques = [];\r\n            techniques.forEach(technique => {\r\n                if (technique.id == chosenTechnique.id)\r\n                {\r\n                let updatedTechnique = {id: chosenTechnique.id, technique: chosenTechnique.technique, color: chosenTechnique.color, notes: notes}\r\n\r\n                updatedTechniques.push(updatedTechnique)\r\n                } else{\r\n                    \r\n                    updatedTechniques.push(technique)\r\n                }\r\n            \r\n             console.log(updatedTechniques)\r\n            })\r\n            \r\n            return updatedTechniques;\r\n        });\r\n        \r\n    }\r\n\r\n    function editNote(noteEdit, noteID, chosenTechnique) {\r\n        setTechniques(techniques => {\r\n            let updatedTechniques = [];\r\n            \r\n            techniques.forEach(technique => {\r\n                let updatedTechniqueNotes = [];\r\n                if (technique.id === chosenTechnique.id)\r\n                 {\r\n\r\n                    technique.notes.forEach(techniqueNote => {\r\n                        if (techniqueNote.noteID === noteID)\r\n                        { \r\n                            updatedTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\r\n                        } else\r\n                        {\r\n\r\n                            updatedTechniqueNotes.push({noteText:techniqueNote.noteText, noteID:techniqueNote.noteID, noteTitle:\"Note \" + (techniqueNote.noteID)})\r\n                        }\r\n                    })\r\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes: updatedTechniqueNotes})\r\n\r\n\r\n                  } else\r\n                  {\r\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes:technique.notes})\r\n                  }\r\n\r\n\r\n                })\r\n\r\n                return updatedTechniques;\r\n            })\r\n\r\n        }\r\n    \r\n\r\n    function handleCreateCategory()\r\n    {\r\n\r\n        // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\r\n        const colorArray = [\"#08892c\",\"#8e057e\",\"#3f3f8c\",\"#874c47\", \"#dd9300\", \"#a32f2f\", \"#d1ca00\", \"#2d2020\"]\r\n        const category = categoryRef.current.value;\r\n\r\n        if(category === \"\")\r\n        { alert(\"Please enter a category.\") \r\n        return;\r\n         }\r\n\r\n         setCategories(prevCategories => {\r\n             return [...prevCategories, {id:catNo, category:category, color:colorArray[categories.length] }]\r\n         })\r\n\r\n         categoryRef.current.value = null;\r\n\r\n    }\r\n\r\n    function getRandom(max, min) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    \r\n   const handleDeleteTechnique = (techniqueID) => {\r\n    setTechniques(techniques => {return techniques.filter(technique => technique.id !== techniqueID)}) \r\n}\r\n\r\n\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n        <div id=\"mainHeader\" class=\"header\">BJJ NOTES</div>\r\n        <div id=\"description\" class=\"header\">\r\n            <p>Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).</p>\r\n            <p>Feel free to drag and drop your techniques into their respective categories.</p>\r\n        </div>\r\n        <div class=\"inContain\">\r\n        <div id=\"techniques\" class=\"header\">Techniques</div>\r\n        <label for=\"technique\">Technique</label>    \r\n        <input ref={techniqueRef} id=\"technique\" class=\"input\" type=\"text\"></input>\r\n        <button onClick={createLog} id=\"addNote\" class=\"input\">Add Technique</button>\r\n        </div>\r\n        <Techniques handleDeleteTechnique={handleDeleteTechnique} editNote={editNote} addNote={addNote} techniques={ techniques } />\r\n        <div class=\"inContain\">\r\n        <label for=\"instructional\">Categories</label>    \r\n        <input ref={categoryRef} id=\"category\" class=\"input\" type=\"text\"></input>\r\n        <button onClick={handleCreateCategory} id=\"addCategory\" class=\"input\">Add Category</button>\r\n        </div>\r\n        <Categories techniques={techniques} editNote={editNote} addNote={addNote} handleDeleteTechnique={handleDeleteTechnique} categories={categories}/>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}