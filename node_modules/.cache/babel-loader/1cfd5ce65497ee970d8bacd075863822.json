{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/bjj-notes/src/Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CategorizedTechniques from './CategorizedTechniques';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category({\n  category,\n  techniques,\n  handleDeleteTechnique\n}) {\n  _s();\n\n  const [catTechniques, setCatTechniques] = useState([]);\n\n  const handleDrop = e => {\n    const draggable = document.querySelector('.dragging');\n    e.target.style.filter = \"brightness(100%)\";\n    techniques.forEach(technique => {\n      if (draggable.id === technique.id.toString()) {\n        //    const oldColor = e.target.style.backgroundColor;\n        draggable.style.filter = \"brightness(75%)\";\n        setCatTechniques(prevCatTechniques => {\n          let color = \"\";\n\n          if (prevCatTechniques.length > 0) {\n            color = prevCatTechniques[0].color;\n          } else {\n            color = technique.color;\n          }\n\n          console.log;\n          return [...prevCatTechniques, {\n            id: technique.id,\n            technique: technique.technique,\n            color: color,\n            notes: technique.notes\n          }];\n        });\n      }\n\n      console.log(catTechniques);\n    });\n  }; // function darken(rgb)\n  // {   \n  //     rgbNumbers = [];\n  //    order = 0;\n  // for (let i = 0; i < rgb.length; i++)\n  // {\n  //         if (rgbArray[i] >= \"0\" && rgbArray[i] <= \"9\")\n  //         { \n  //         } else{\n  //         }\n  // };\n  //     const final = newColor.join(\"\")\n  //     return final;\n  // }\n\n\n  function addCatTechNote(notes, chosenCatTechnique) {\n    setCatTechniques(catTechniques => {\n      let updatedCatTechniques = [];\n      catTechniques.forEach(catTechnique => {\n        if (catTechnique.id == chosenCatTechnique.id) {\n          let updatedTechnique = {\n            id: chosenCatTechnique.id,\n            technique: chosenCatTechnique.technique,\n            color: chosenCatTechnique.color,\n            notes: notes\n          };\n          updatedCatTechniques.push(updatedTechnique);\n        } else {\n          updatedCatTechniques.push(catTechnique);\n        }\n\n        console.log(updatedCatTechniques);\n      });\n      return updatedCatTechniques;\n    });\n  }\n\n  function editCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n    setCatTechniques(catTechniques => {\n      let updatedCatTechniques = [];\n      catTechniques.forEach(catTechnique => {\n        let updatedCatTechniqueNotes = [];\n\n        if (catTechnique.id === chosenCatTechnique.id) {\n          catTechnique.notes.forEach(catTechniqueNote => {\n            if (catTechniqueNote.noteID === noteID) {\n              alert('same');\n              updatedCatTechniqueNotes.push({\n                noteText: noteEdit,\n                noteID: noteID,\n                noteTitle: \"Note \" + noteID\n              });\n            } else {\n              updatedCatTechniqueNotes.push({\n                noteText: catTechniqueNote.noteText,\n                noteID: catTechniqueNote.noteID,\n                noteTitle: \"Note \" + catTechniqueNote.noteID\n              });\n            }\n          });\n          updatedCatTechniques.push({\n            id: catTechnique.id,\n            technique: catTechnique.technique,\n            color: catTechnique.color,\n            notes: updatedCatTechniqueNotes\n          });\n        } else {\n          updatedCatTechniques.push({\n            id: catTechnique.id,\n            technique: catTechnique.technique,\n            color: catTechnique.color,\n            notes: catTechnique.notes\n          });\n        }\n      });\n      return updatedCatTechniques;\n    });\n  }\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.target.style.filter = \"brightness(200%)\";\n  };\n\n  const handleDragLeave = e => {\n    e.target.style.filter = \"brightness(100%)\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    droppable: \"true\",\n    style: {\n      backgroundColor: category.color\n    },\n    class: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: category.category + \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategorizedTechniques, {\n      addCatTechNote: addCatTechNote,\n      editCatTechNote: editCatTechNote,\n      handleDeleteTechnique: handleDeleteTechnique,\n      catTechniques: catTechniques\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Category, \"4eDMECyBhcZ4ZcCAFdORF4xblYo=\");\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/peter/Documents/React/bjj-notes/src/Category.js"],"names":["React","useState","CategorizedTechniques","Category","category","techniques","handleDeleteTechnique","catTechniques","setCatTechniques","handleDrop","e","draggable","document","querySelector","target","style","filter","forEach","technique","id","toString","prevCatTechniques","color","length","console","log","notes","addCatTechNote","chosenCatTechnique","updatedCatTechniques","catTechnique","updatedTechnique","push","editCatTechNote","noteEdit","noteID","updatedCatTechniqueNotes","catTechniqueNote","alert","noteText","noteTitle","handleDragOver","preventDefault","handleDragLeave","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport CategorizedTechniques from './CategorizedTechniques';\n\n\nexport default function Category({category, techniques, handleDeleteTechnique}) {\n        \n    const [catTechniques, setCatTechniques] = useState([]);\n\n    const handleDrop = (e) =>\n    {\n     \n      const draggable = document.querySelector('.dragging');\n      e.target.style.filter = \"brightness(100%)\";\n      techniques.forEach(technique => {\n\n            if (draggable.id === technique.id.toString())\n            {\n            //    const oldColor = e.target.style.backgroundColor;\n                \n            \n\n               draggable.style.filter = \"brightness(75%)\"\n               \n               \n\n            setCatTechniques(prevCatTechniques => {\n\n                let color = \"\";\n\n                if (prevCatTechniques.length > 0)\n                {\n                    color = prevCatTechniques[0].color\n                } else{\n                    color = technique.color;\n                }\n               console.log\n                return [...prevCatTechniques, {id: technique.id , technique:technique.technique, color:color, notes: technique.notes}]\n                \n            })\n            }\n\n            console.log(catTechniques)\n        })\n       \n\n    }\n        // function darken(rgb)\n        // {   \n\n        //     rgbNumbers = [];\n        //    order = 0;\n\n        // for (let i = 0; i < rgb.length; i++)\n        // {\n        //         if (rgbArray[i] >= \"0\" && rgbArray[i] <= \"9\")\n        //         { \n                    \n\n                   \n        //         } else{\n                   \n        //         }\n           \n        // };\n        //     const final = newColor.join(\"\")\n        //     return final;\n\n\n\n        // }\n\n      \n\n\n\n\n    function addCatTechNote(notes, chosenCatTechnique) {\n        setCatTechniques(catTechniques => {\n          let  updatedCatTechniques = [];\n            catTechniques.forEach(catTechnique => {\n                if (catTechnique.id == chosenCatTechnique.id)\n                {\n                let updatedTechnique = {id: chosenCatTechnique.id, technique: chosenCatTechnique.technique, color: chosenCatTechnique.color, notes: notes}\n\n                updatedCatTechniques.push(updatedTechnique)\n                } else{\n                    \n                    updatedCatTechniques.push(catTechnique)\n                }\n            \n             console.log(updatedCatTechniques)\n            })\n            \n            return updatedCatTechniques;\n        });\n        \n    }\n\n    function editCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n        setCatTechniques(catTechniques => {\n            let updatedCatTechniques = [];\n            \n            catTechniques.forEach(catTechnique => {\n                let updatedCatTechniqueNotes = [];\n                if (catTechnique.id === chosenCatTechnique.id)\n                 {\n\n                    catTechnique.notes.forEach(catTechniqueNote => {\n                        if (catTechniqueNote.noteID === noteID)\n                        { \n                            alert('same')\n                            updatedCatTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                        } else{\n\n                            updatedCatTechniqueNotes.push({noteText:catTechniqueNote.noteText, noteID:catTechniqueNote.noteID, noteTitle:\"Note \" + (catTechniqueNote.noteID)})\n                        }\n                    })\n                    updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: updatedCatTechniqueNotes})\n\n\n                  } else\n                  {\n                    updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes:catTechnique.notes})\n                  }\n\n\n                })\n\n                return updatedCatTechniques;\n            })\n\n        }\n    \n\n    const handleDragOver = (e) =>\n    {   e.preventDefault();\n        e.target.style.filter = \"brightness(200%)\";\n    }\n\n    \n \n    const handleDragLeave = (e) =>\n    {\n        e.target.style.filter = \"brightness(100%)\";\n    }\n\n    \n\n    return (\n        <div onDrop={handleDrop} onDragOver={handleDragOver}  onDragLeave={handleDragLeave} droppable=\"true\" style={{backgroundColor:category.color}} class=\"category\">\n            <h1>{category.category + \":\"}</h1>\n            <CategorizedTechniques addCatTechNote={addCatTechNote} editCatTechNote={editCatTechNote} handleDeleteTechnique={handleDeleteTechnique} catTechniques={catTechniques}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}